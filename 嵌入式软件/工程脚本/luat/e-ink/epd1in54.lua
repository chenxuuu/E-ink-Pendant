module(..., package.seeall)
require"misc"
require"utils"

local getBusy         = pins.setup(pio.P0_6)
local setRST          = pins.setup(pio.P0_5,1)
local setDC           = pins.setup(pio.P0_4,1)

local pic = {0XFF,0X7E,0X07,0XE0,0X0F,0XC0,0X03,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0X7F,0XFF,0XFF,0XFF,0XFF,0X7C,0X00,0XF0,0X03,0XE0,0X03,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFC,0X01,0XF0,0X01,0XF8,0X03,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFC,0X01,0XF0,0X00,
0X7E,0X03,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0X01,0XF0,0X00,0X3F,0X03,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X03,
0XFF,0XC0,0X1F,0XC7,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XC3,0XFF,0XFF,0X07,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XF3,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFD,0XFF,0XF8,0X1F,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XE0,0X07,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X7F,0XFF,0XFF,0XFF,0XC0,0X0F,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0X1F,0XFF,0XFF,0XFF,0XC0,0X0F,0XF7,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X07,0XFF,0XFF,0XFF,
0XE0,0X3F,0XF7,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0X03,0XFF,0XFF,0XFF,0XE0,0X7F,0XF7,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X00,0XFF,
0XFF,0XFF,0XC0,0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X00,0X3F,0XFF,0XFF,0XE3,0X7F,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0X00,0X0F,0XFF,0XFF,0XF7,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X00,0X03,0XFF,0XFF,0XFD,0X7F,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X7F,0XFF,
0XFF,0XFF,0X80,0X00,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X7F,0XFF,0XFF,0XFF,0XE0,0X00,0X3F,0XFF,0XFF,
0XFF,0XEF,0XFF,0XFF,0XF8,0X01,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0X7F,0XFF,0XFF,0XFF,0XF8,0X00,0X0F,0XFF,0XFF,0XCF,0XEF,0XFF,0XE0,0XFF,0XFF,0XFE,
0X07,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X7F,0XFF,0XFF,0XFF,0XFE,0X00,0X03,
0XFF,0XFF,0XE0,0X0F,0XF8,0XFF,0XFE,0XFF,0XFF,0XFF,0XC1,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0X7F,0XFF,0XFF,0XFF,0XFF,0X80,0X01,0XFF,0XFF,0XF0,0X0F,0XC7,0XE0,0X00,
0X00,0XFF,0XFF,0XFF,0X0F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X7F,0XFF,0XFF,0XFF,0XFF,
0XE0,0X02,0XFF,0XFF,0XFC,0X0C,0XE0,0X00,0X00,0X00,0X00,0X7F,0XFF,0XFE,0X3F,0XFF,
0XFF,0XFF,0XFF,0XFF,0X7F,0XFF,0XFF,0XFF,0XFF,0XF8,0X00,0X3F,0XFF,0XFF,0X00,0X00,
0X00,0X00,0X00,0X00,0X00,0XAF,0XFF,0XF3,0XFF,0XFF,0XFF,0XFF,0XFF,0X7F,0XFF,0XFF,
0XFF,0XFF,0XFE,0X00,0X27,0XFF,0XFF,0XE8,0X00,0X00,0X00,0X00,0X00,0X00,0X0D,0XFF,
0XFF,0X9F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X80,0X01,0XFF,0XFF,
0XE8,0X00,0X00,0X00,0X00,0X00,0X00,0X09,0X5F,0XFF,0XF9,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XF0,0X00,0X3F,0XFF,0XF0,0X00,0X00,0X00,0X00,0X00,0X00,
0X00,0X07,0XFF,0XFF,0X3F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFC,0X00,
0X0F,0XFF,0XF0,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X09,0XFF,0XFF,0XF7,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X00,0X03,0XFF,0XF0,0X00,0X00,0X00,0X00,
0X00,0X00,0X00,0X08,0X0F,0XFF,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XC0,0X07,0XFF,0XF0,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X83,0XDF,0XFF,
0XBF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XF0,0X00,0XFF,0XF0,0X00,0X05,
0X7D,0X1C,0X71,0X00,0X04,0X00,0X00,0XF7,0XFF,0XE7,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0X7F,0XFF,0XFF,0XFC,0X00,0X7F,0XF0,0X01,0XE0,0X00,0X3F,0XFF,0XFF,0X92,0X20,0X22,
0XFF,0X7F,0XFD,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X0F,0XFF,0XFF,0XFF,0X00,0X1F,0XF0,
0XC1,0XFF,0XFF,0XFF,0XE0,0X3F,0XFF,0XFE,0X13,0X17,0XFF,0XFF,0X3F,0XFF,0XFF,0XFF,
0XFF,0XFF,0X03,0XFF,0XFF,0XFF,0XC0,0X0F,0XF8,0XFF,0XFF,0XFF,0XFF,0XFF,0XF8,0X7F,
0XFF,0XB8,0X1F,0XFF,0XFF,0XEF,0XFF,0XFF,0XFF,0XFF,0XFF,0X00,0X7F,0XFF,0XFF,0XF0,
0X07,0X9F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XF8,0X3F,0XFF,0XFB,0XFF,0XFF,0XFB,0XFF,
0XFF,0XFF,0XFF,0XFF,0X00,0X1F,0XFF,0XFF,0XFC,0X00,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XF8,0XFF,0XFF,0XFF,0XFF,0XFE,0XFE,0XFF,0XFF,0XFF,0XFF,0X00,0X03,0XFF,
0XFF,0XFF,0X83,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XC7,0XFF,0XFF,0XFF,
0XFF,0XFE,0XFF,0XFF,0XFF,0XFF,0X00,0X00,0XFF,0XFF,0XFF,0XDF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0X3F,0XFF,0XFF,0XFF,0XEE,0XFF,0XFF,0XFF,0XFF,0X00,
0X00,0X3F,0XFF,0XFF,0XBF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XC7,
0XFF,0XFF,0XFF,0XF6,0XFF,0XFF,0XFF,0XFF,0X00,0X00,0X0F,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0X7F,0XFF,0XFF,0XE0,0XFF,0XFF,0XFF,
0XFF,0X00,0X00,0X03,0XFF,0XFB,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XEF,0XFF,0XFD,0XE0,0XFF,0XFF,0XFF,0XFF,0X00,0X00,0X00,0X7F,0XEF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFC,0XFF,0XEF,0XC0,0XFF,
0XFF,0XFF,0XFF,0X00,0X00,0X00,0X1F,0XBF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0X9F,0XFB,0X00,0XFF,0XFF,0XFF,0XFF,0X00,0X00,0X00,0X07,
0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XF7,0XFF,
0XA0,0X7F,0XFF,0XFF,0XFF,0X00,0X00,0X00,0X01,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,0XC0,0X7F,0XFF,0XFF,0XFF,0X00,0X00,
0X00,0X03,0XFF,0XFF,0XFF,0XFF,0XFF,0X80,0X00,0X1F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XBF,0X80,0X87,0XF0,0X1F,0XFC,0X00,0X00,0X00,0X07,0XFF,0XFF,0XFF,0X00,0X00,
0X06,0X02,0X00,0X0F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XF7,0XC1,0X83,0XC0,0X1F,0XF8,
0X00,0X00,0X00,0X0F,0XFF,0XFF,0XC0,0X00,0X00,0X06,0X02,0X00,0X00,0X7F,0XFF,0XFF,
0XFF,0XFF,0XFF,0XF9,0XC1,0XC3,0XA0,0X0F,0XF0,0X00,0X00,0X00,0X0F,0XFF,0XE3,0XF0,
0X00,0X00,0X0E,0X02,0X00,0X03,0X00,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X41,0XE0,0X00,
0X07,0XF8,0X00,0X00,0X00,0X1F,0XFC,0XFF,0XF0,0X00,0X00,0X0F,0X03,0X00,0X03,0X80,
0X03,0XFF,0XFF,0XFF,0XFF,0XFF,0XC1,0XE0,0X00,0X07,0XF8,0X00,0X00,0X00,0X3F,0X9F,
0XFF,0XF0,0X00,0X00,0X1F,0X03,0X00,0X03,0X80,0X00,0X1F,0XFF,0XFF,0XFF,0XFF,0XF9,
0XE0,0X00,0X07,0XFC,0X00,0X00,0X00,0X7C,0XFF,0XFF,0XF0,0X00,0X00,0X1F,0X03,0X00,
0X03,0X80,0X08,0X00,0XFF,0XFF,0XFF,0XFF,0XFE,0XE0,0X30,0X07,0XFE,0X00,0X00,0X00,
0XF7,0XFF,0XFF,0XF0,0X00,0X00,0X1F,0X03,0X00,0X03,0XC0,0X08,0X00,0X0F,0XFF,0XFF,
0XFF,0XFF,0X60,0XFC,0X07,0XFE,0X00,0X00,0X01,0XFF,0XFF,0XFF,0XE0,0X00,0X00,0X3F,
0X03,0X80,0X03,0XC0,0X04,0X00,0X00,0X7F,0XFF,0XFF,0XFF,0XC3,0XFE,0X07,0XFE,0X00,
0X00,0X01,0XFF,0XFF,0XFF,0X20,0X00,0X00,0X3F,0X03,0X80,0X03,0XE0,0X04,0X00,0X00,
0X07,0XFF,0XFF,0XFF,0XE3,0XFF,0X03,0XFE,0X00,0X00,0X00,0XFF,0XFF,0XFF,0XE0,0X00,
0X00,0X3F,0X03,0XC0,0X03,0XE0,0X06,0X00,0X00,0X00,0XFF,0XFF,0XFF,0XF7,0XFF,0X03,
0XFE,0X00,0X00,0X00,0XFF,0XFF,0XFE,0XE0,0X00,0X00,0X7F,0X03,0XC0,0X01,0XE0,0X06,
0X00,0X00,0X00,0X3F,0XFF,0XFF,0XFB,0XFF,0X83,0XFE,0X00,0X00,0X00,0XFF,0XFF,0XFF,
0XF0,0X00,0X00,0X7F,0X81,0XC0,0X01,0XF0,0X07,0X00,0X00,0X00,0X07,0XFF,0XFF,0XFD,
0XFF,0X83,0XFE,0X00,0X00,0X00,0X7F,0XFF,0XFD,0XF0,0X01,0X77,0X3F,0XFD,0XE0,0X01,
0XF0,0X07,0X00,0X00,0X00,0X00,0XFF,0XFF,0XFF,0X7F,0X87,0XFF,0X00,0X00,0X00,0X3F,
0XFF,0XFF,0XFF,0XFF,0X7F,0X7F,0XBD,0XEF,0X81,0XF8,0X07,0X80,0X00,0X00,0X00,0X1F,
0XFF,0XFF,0XFF,0X8F,0XFF,0X00,0X00,0X00,0X0F,0XFF,0XFB,0XFF,0XFF,0XE7,0XF7,0XFD,
0XF7,0XFF,0XF8,0X03,0X80,0X00,0X00,0X00,0X03,0XFF,0XFF,0XDF,0X8F,0XFF,0X00,0X00,
0X00,0X07,0XFF,0XFF,0XFB,0XFF,0XE6,0XFB,0XFD,0XFF,0XFF,0XFF,0X03,0XC0,0X00,0X00,
0X00,0X00,0X7F,0XFF,0XFF,0X9F,0XFF,0X00,0X00,0X00,0X01,0XFF,0XF7,0XEF,0XFE,0XF6,
0XFF,0XDD,0XFB,0XFE,0XFD,0XF3,0XC0,0X00,0X00,0X00,0X00,0X1F,0XFF,0XFF,0X1F,0XFF,
0X00,0X00,0X00,0X00,0XFF,0XFF,0XFD,0XFE,0XF7,0XFF,0X7D,0XFF,0XFE,0XFE,0XFF,0XE0,
0X00,0X00,0X00,0X00,0X17,0XFF,0XFF,0X1F,0XFF,0X00,0X00,0X00,0X00,0X7F,0XFF,0XDF,
0XFE,0XD7,0XFF,0XBD,0XFD,0XFE,0XFF,0XFF,0XE8,0X00,0X00,0X00,0X00,0X1D,0XFF,0XFA,
0X1F,0XFF,0X00,0X00,0X00,0X00,0X1F,0XEF,0XF6,0XFE,0XD5,0XFF,0XEF,0XFF,0XFF,0XFF,
0X7D,0XFF,0X00,0X00,0X00,0X00,0X1F,0X7F,0XFC,0X1F,0XFF,0X00,0X00,0X00,0X00,0X07,
0XFF,0XBE,0XFE,0XF5,0XFF,0XFF,0XFE,0XFF,0XFF,0XFD,0XF7,0XF0,0X00,0X00,0X00,0X1F,
0XEF,0XFE,0X1F,0XFF,0X00,0X00,0X00,0X00,0X01,0XDF,0XFF,0XFE,0XB7,0XFF,0XF7,0XFF,
0X7F,0X7F,0XFF,0XC7,0XFE,0X00,0X00,0X00,0X1F,0XFB,0XFF,0X0F,0XFF,0X00,0X00,0X00,
0X00,0X00,0X3F,0X7B,0X7E,0XB7,0XFF,0XFE,0X7F,0XBF,0X7F,0XFE,0XFB,0XFF,0XC0,0X00,
0X00,0X3F,0XFE,0XFF,0X8F,0XFF,0X00,0X00,0X00,0X00,0X00,0X3F,0XFF,0XFE,0XBF,0XFF,
0XFA,0XFF,0XDF,0XFF,0XCE,0XFD,0XFF,0XFC,0X00,0X00,0X3F,0XFF,0XBF,0XC7,0XFF,0X00,
0X00,0X00,0X00,0X00,0X3F,0XFD,0XBE,0XFB,0XFF,0XFC,0XFF,0XEF,0XFF,0XF7,0XFF,0XFF,
0XFF,0X00,0X00,0X3F,0XFF,0XEF,0XC0,0XFF,0X00,0X00,0X00,0X00,0X00,0X7F,0XFF,0XFE,
0XFB,0XFF,0XFE,0XFF,0XF7,0XFF,0XFB,0XFE,0XFF,0XFF,0X60,0X00,0X3F,0XFF,0XFB,0XE0,
0XFF,0X00,0X00,0X00,0X00,0X00,0X6F,0XFF,0XFE,0XFB,0XFF,0XFF,0XFF,0XFB,0XBF,0XFD,
0X7F,0XFF,0XFF,0X78,0X00,0X3F,0XFF,0XFE,0XF0,0XFC,0X00,0X00,0X00,0X00,0X00,0X75,
0XFF,0XDE,0X7F,0XFF,0XFF,0XFF,0XFD,0XBF,0XFE,0X7F,0X7F,0XFF,0X7E,0X00,0X3F,0XFF,
0XFF,0X70,0X78,0X00,0X00,0X00,0X00,0X00,0XAF,0XFF,0XDE,0X7F,0XFF,0XFF,0XFF,0XFE,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X00,0X7F,0XFF,0XFF,0XF8,0X70,0X00,0X00,0X00,0X00,
0X00,0X9F,0XFF,0XEE,0X7E,0X7F,0XFB,0XFF,0XFF,0X9F,0XFF,0XBF,0XBF,0XFF,0XFF,0XC0,
0X7F,0XFF,0XFF,0XE8,0X70,0X00,0X00,0X00,0X00,0X01,0X9B,0XFF,0XEF,0X7C,0X01,0XFF,
0XFF,0XFF,0XDD,0XFF,0XFF,0XFF,0XFF,0XFF,0XF0,0X7F,0XFF,0XFF,0XF8,0X70,0X00,0X00,
0X00,0X00,0X01,0X9F,0XFF,0XFE,0XFF,0X80,0X01,0XFF,0XFF,0XFF,0XFF,0XFF,0XDF,0XFF,
0XFF,0XF8,0X7F,0XFF,0XFF,0XF8,0X70,0X00,0X00,0X00,0X00,0X01,0X97,0XFF,0XF6,0XFF,
0X80,0X71,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0X7F,0XFF,0XFF,0XF0,0X20,
0X00,0X00,0X00,0X00,0X00,0XBF,0XD7,0XFE,0XFF,0X80,0X3F,0XFF,0XFF,0XF8,0X1F,0XFF,
0XFF,0XFF,0XFF,0XFF,0X7F,0XFF,0XFF,0XC0,0X00,0X00,0X00,0X00,0X00,0X00,0XEF,0XBF,
0XFA,0XFF,0X80,0X3F,0XFF,0XFF,0XF0,0X00,0X00,0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0X00,0X00,0X00,0X00,0X00,0X00,0X00,0XFF,0XFF,0XEE,0XBF,0X80,0X3F,0XFF,0XFF,0XFF,
0X80,0X00,0X3F,0XFF,0XFF,0XFF,0XFF,0XFF,0XF9,0X00,0X78,0X00,0X00,0X00,0X00,0X00,
0X7F,0XFF,0XEC,0XBF,0X80,0X1F,0XFF,0XFF,0XFF,0X80,0XFF,0XFF,0XFE,0XFF,0XFF,0XFF,
0XFF,0XE6,0X00,0XF8,0X00,0X00,0X00,0X00,0X00,0X5F,0XF4,0XFC,0XBF,0XC0,0X3F,0XFF,
0XFF,0XFF,0X80,0X7F,0XDF,0XFE,0XFF,0XFE,0XFF,0XFC,0X3C,0X01,0XF8,0X00,0X00,0X00,
0X00,0X00,0X3F,0XFB,0XBE,0XBF,0XC0,0X7F,0XFF,0XFF,0XFF,0X80,0X3F,0XDF,0XFE,0XFF,
0XFE,0XFE,0X00,0X10,0X01,0XF8,0X00,0X00,0X00,0X00,0X00,0X3F,0XEF,0X36,0XBF,0XC0,
0X1F,0XFF,0XFF,0XFF,0X80,0X3F,0XDF,0XFE,0XFF,0XFE,0XFF,0XC0,0X00,0X01,0XF8,0X00,
0X00,0X00,0X00,0X00,0X3F,0XDE,0XEF,0XFF,0XE4,0X5F,0XFF,0XFF,0XFF,0X80,0X3F,0XDF,
0XFE,0XFF,0XFF,0XDF,0XC0,0X00,0X03,0XF8,0X00,0X00,0X00,0X00,0X00,0X0F,0XBD,0XEB,
0X7F,0XEF,0XDF,0XFF,0XFF,0XFF,0X80,0XFF,0XDF,0XFE,0XFF,0XFF,0XFF,0XC0,0X00,0X03,
0XFC,0X00,0X00,0X00,0X00,0X00,0X1F,0XFB,0XFF,0XDF,0XFF,0XDF,0XFF,0XFF,0XFF,0X80,
0X3F,0XDF,0XFE,0XFF,0XFF,0XFF,0XC0,0X00,0X03,0XFC,0X00,0X00,0X00,0X00,0X00,0X1F,
0XFF,0XDD,0XDF,0XFB,0X3F,0XFF,0XFF,0XFF,0XB0,0X3F,0XDF,0XFC,0XFF,0XFD,0XFF,0XC0,
0X18,0X03,0XFC,0X00,0X00,0X00,0X00,0X00,0X1D,0XFF,0XFF,0X9F,0XFF,0XFF,0XFF,0XFF,
0XFF,0XF1,0XBF,0XDF,0XFC,0XFF,0XFD,0XFF,0XC0,0X18,0X01,0XF8,0X00,0X00,0X00,0X00,
0X00,0X1F,0XFF,0XFF,0XDF,0XFF,0XFF,0XFF,0XFF,0XFF,0XDF,0XFF,0XDF,0XFC,0XFF,0XFC,
0X7F,0XC0,0X18,0X01,0XF8,0X00,0X00,0X00,0X00,0X00,0X1B,0XDF,0XBE,0XDF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0X7F,0XFF,0XFC,0X7F,0XFC,0X1F,0XC0,0X00,0X00,0XF0,0X00,0X00,
0X00,0X00,0X00,0X3F,0XBF,0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XF0,0XFF,0XFF,0XF8,
0XFF,0XFC,0X07,0XE3,0XD8,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X37,0XFF,0XFF,0X6F,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFC,0XFF,0XFA,0X01,0XE3,0XF8,0X00,0X00,
0X00,0X00,0X00,0X00,0X00,0X3F,0X7E,0XFF,0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XE8,0X7F,0XFB,0XC0,0X03,0XF8,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X2F,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XE4,0X7F,0XFB,0XF0,0X01,0X00,
0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X3E,0XFD,0XFF,0XB7,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XC4,0X3F,0XFB,0XF8,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
0X3F,0XFB,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XBF,0XE0,0X3F,0XBF,0XFE,
0XC0,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X1F,0XFB,0XBF,0XFB,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XBF,0X80,0X2F,0XBF,0XFF,0XC0,0X00,0X00,0X00,0X00,0X00,0X00,
0X00,0X00,0X1D,0XFF,0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XBF,0XE0,0X3F,
0XB8,0XFF,0XE0,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X3F,0XFE,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XBE,0X20,0X1E,0XB0,0X3F,0XE0,0X00,0X00,0X00,0X00,
0X00,0X00,0X00,0X00,0X3F,0XF7,0XFF,0XFD,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XBC,
0X88,0X1F,0XB0,0X01,0XE0,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X7B,0XF7,0XF7,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XF8,0X00,0X1F,0XB0,0X00,0X40,0X00,0X00,
0X00,0X00,0X00,0X00,0X00,0X00,0X7F,0XEF,0XFF,0XEE,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFD,0X80,0X2F,0XB0,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X77,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFB,0X00,0X17,0X90,0X00,0X80,
0X00,0X70,0X03,0X00,0X00,0X00,0X00,0X00,0X7F,0XDF,0XDF,0XDF,0X7F,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0X7A,0X00,0X17,0X80,0X00,0X81,0X00,0XFF,0X07,0X00,0X00,0X00,0X00,
0X00,0X3F,0XFF,0XBF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X71,0X10,0X07,0X80,
0X00,0X80,0X00,0XDF,0X83,0X00,0X00,0X00,0X00,0X00,0X3F,0XBF,0X7F,0XBF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0X78,0X80,0X07,0X80,0X01,0XC0,0X00,0X7F,0X81,0X00,0X00,
0X00,0X00,0X00,0X1F,0XBF,0XFF,0XFF,0XBF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X7E,0X00,
0X0F,0X80,0X01,0XC0,0X00,0X3F,0X81,0X00,0X00,0X0C,0X00,0X00,0X1F,0XFE,0XFF,0XFF,
0XBF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XE0,0X00,0X0B,0X20,0X01,0XC0,0X00,0X1F,0X81,
0X00,0X00,0X0E,0X00,0X00,0X1F,0X7E,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0XF0,0X20,0X05,0X20,0X01,0XC0,0X00,0X9F,0X81,0X00,0X00,0X0B,0X00,0X00,0X1F,0XFF,
0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0XE0,0X00,0X01,0X00,0X03,0XC0,0X00,
0XDF,0X81,0X00,0X00,0X00,0X00,0X00,0X1F,0XFF,0XFF,0XFF,0XBF,0XFF,0XFF,0XFF,0XFF,
0XFF,0XFE,0XE0,0X00,0X00,0X40,0X03,0XC0,0X00,0XFF,0X80,0X00,0X00,0X00,0X00,0X00,
0X1E,0XFD,0XFF,0XFC,0X3F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0XD0,0X40,0X00,0X40,0X07,
0XC0,0X00,0X1F,0X80,0X00,0X00,0X00,0X00,0X00,0X1F,0XFD,0XFD,0XFF,0XFF,0XDF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XC0,0X00,0X00,0X80,0X07,0XC0,0X00,0X07,0X80,0X00,0X00,0X00,
0X00,0X00,0X1F,0XFD,0XFF,0XFF,0XFF,0XEF,0XFF,0XFF,0XFF,0XFF,0XFF,0XC0,0X00,0X00,
0X00,0X0F,0XC0,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X0F,0XFD,0XFB,0XFD,0XFF,
0XF7,0XFB,0XF7,0XFF,0XFF,0XFF,0XC0,0X00,0X00,0X00,0X0F,0XC0,0X00,0X00,0X00,0X00,
0X00,0X00,0X00,0X00,0X0F,0XFF,0XFF,0XBF,0XBF,0XFB,0XFF,0XFF,0XFF,0XFF,0XFD,0X80,
0X00,0X00,0X00,0X0F,0XC0,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X07,0XFF,0XF7,
0XFF,0XEF,0XFD,0XFE,0XFD,0XFF,0XFF,0XFD,0X80,0X00,0X00,0X00,0X0F,0XC0,0X00,0X00,
0X00,0X00,0X00,0X00,0X00,0X00,0X07,0XFF,0X77,0X9F,0XFB,0XFE,0XFF,0XFF,0XFF,0XFF,
0XF8,0X00,0X00,0X00,0X00,0X0F,0XE0,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X07,
0XFF,0XBF,0XEF,0XFE,0XFF,0X3F,0XFF,0XFF,0XFF,0XF0,0X00,0X00,0X00,0X20,0X1F,0XFC,
0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X03,0XFF,0XCF,0X77,0XFF,0XBF,0XEF,0XFF,
0XFF,0XFF,0XC0,0X00,0X00,0X00,0X00,0X1F,0XFF,0XF8,0X00,0X00,0X00,0X00,0X00,0X00,
0X00,0X03,0XFF,0XEF,0XFF,0XFF,0XFF,0XDF,0XFF,0XFF,0XFF,0X80,0X00,0X00,0X00,0X00,
0X3F,0XFF,0XFF,0XFF,0XFF,0X00,0X00,0X00,0X00,0X00,0X03,0XFF,0XF7,0XFE,0XFF,0XFF,
0XFD,0XFF,0XFF,0XFE,0X80,0X00,0X00,0X00,0X00,0X3F,0XFF,0XFF,0XFF,0XFF,0X00,0X00,
0X00,0X00,0X00,0X03,0XFF,0XFB,0XFF,0X7F,0XFD,0XF6,0XFF,0XFF,0XFD,0X80,0X00,0X00,
0X00,0X00,0X3F,0XFF,0XFF,0XFF,0XFF,0X00,0X00,0X00,0X00,0X00,0X01,0XFF,0XFD,0XBF,
0XFF,0XFF,0XFB,0XBF,0XFF,0XF7,0X80,0X00,0X00,0X00,0X00,0X3F,0XFF,0XFF,0XFF,0XFF,
0X00,0X00,0X00,0X00,0X00,0X00,0XFF,0XFE,0XDF,0XEF,0XFF,0XFD,0XEF,0XFF,0XDF,0X80,
0X00,0X00,0X00,0X00,0X3F,0XFF,0XFF,0XFF,0XFF,0X00,0X04,0X00,0X00,0X00,0X00,0XFF,
0XFE,0XFF,0XFF,0XFF,0XFE,0XF7,0XFF,0X7F,0XC0,0X00,0X00,0X00,0X00,0X3F,0XFF,0XFF,
0XFF,0XFF,0X00,0X00,0X03,0X00,0X00,0X7F,0X7F,0XFF,0XFF,0XFD,0XFF,0XFF,0X7F,0XFD,
0XFF,0XA0,0X00,0X00,0X00,0X00,0X3F,0XFF,0XFF,0XFF,0XFF,0X00,0X00,0X06,0X00,0X00,
0X7F,0XBF,0XFF,0XFF,0XFF,0XFF,0XFF,0XBB,0XEF,0XFF,0XE0,0X00,0X3F,0XF8,0X00,0X7F,
0XFF,0XFF,0XFF,0XFF,0X00,0X00,0X07,0XC0,0X00,0X3F,0XDF,0XFF,0XFF,0XFF,0XBF,0XFF,
0XFC,0X7F,0XFF,0XE0,0X00,0XFF,0XFE,0X28,0X7F,0XFF,0XFF,0XFF,0XFF,0X00,0X00,0X03,
0XE0,0X00,0X01,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XE0,0X01,0XFF,0XFF,
0X00,0X3F,0XFF,0XFF,0XFF,0XFF,0X80,0X00,0X01,0XE0,0X00,0X00,0X6F,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFD,0XFF,0XFB,0XE0,0X01,0XFF,0XFF,0XD8,0X7F,0XFF,0XFF,0XFF,0XFF,0XC0,
0X00,0X3F,0XE0,0X00,0X7F,0XF7,0XFF,0XDF,0XFF,0XFF,0XFF,0XFD,0XFF,0XFF,0XE0,0X01,
0XFF,0XFF,0XD0,0X3F,0XFF,0XFF,0XFF,0XFF,0X00,0X00,0X7F,0XFF,0XFF,0XFF,0XEF,0XFF,
0XCF,0XFF,0XFF,0XFF,0XFF,0XFF,0XEF,0XC0,0X03,0XFF,0XFF,0XEA,0X7F,0XFF,0XFF,0XFF,
0XFF,0X00,0X00,0X7F,0XFF,0XFF,0XFF,0XDB,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0XFF,0XFF,
0XC0,0X03,0XFF,0XFF,0XFC,0XFF,0XFF,0XFF,0XFF,0XFF,0X00,0X00,0XFE,0X07,0XFF,0XFF,
0XFD,0XFF,0XFF,0XFB,0XFF,0XFF,0XFE,0XFF,0XBF,0XE0,0X02,0XFF,0XFF,0XF4,0X7F,0XFF,
0XFF,0XFF,0XFF,0X00,0X00,0XFE,0X00,0X03,0XFF,0XFE,0XFF,0XFB,0XFD,0XFF,0XFF,0XFF,
0XFF,0X7F,0XC0,0X03,0XFF,0XFF,0XFC,0X7F,0XFF,0XFF,0XFF,0XFF,0X00,0X00,0XFE,0X00,
0X01,0XBF,0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X7E,0XFF,0X80,0X07,0XFF,0XFF,0XF9,
0XFF,0XFF,0XFF,0XFF,0XFF,0X00,0X00,0X06,0X00,0X00,0XFF,0XFF,0X7F,0XFF,0XFF,0XFF,
0XFF,0XFF,0X7F,0XFF,0X80,0X05,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X7F,0XFE,
0X00,0X3F,0XFF,0XFE,0XFF,0XBF,0XFF,0XFF,0XFF,0XFF,0XFF,0XF7,0XFF,0XC0,0X07,0XFF,
0XFF,0XFD,0XFF,0XFF,0XFF,0XFF,0XFF,0X07,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,
0X7F,0XFF,0XFF,0XFF,0XEF,0XFF,0X00,0X07,0XFF,0XFF,0XFC,0XFF,0XFF,0XFF,0XFF,0XFF,
0X00,0X00,0X07,0XFF,0XF8,0X3D,0XFF,0XFF,0XFF,0X3F,0XFF,0XFF,0XFF,0X9F,0XFF,0X00,
0X07,0XFF,0XFF,0XFE,0XFF,0XFF,0XFF,0XFF,0XFF,0X00,0X00,0X00,0X00,0X00,0X0D,0XFF,
0X7F,0XFF,0X7F,0XFF,0XFF,0XFF,0XBF,0XFF,0X80,0X0B,0XFF,0XFF,0XFE,0XFF,0XFF,0XFF,
0XFF,0XFF,0X00,0X00,0X00,0X00,0X00,0X0F,0XFF,0X7F,0XFF,0X7F,0XFF,0XFF,0XFF,0XBF,
0XFF,0X00,0X0F,0XFF,0XFF,0XFE,0X7F,0XFF,0XFF,0XFF,0XFF,0X00,0X00,0X00,0X00,0X40,
0X0B,0XFF,0X7F,0XFF,0X6F,0XFF,0XFF,0XFF,0XFF,0XFE,0X00,0X0F,0XFF,0XBF,0XFE,0X7F,
0XFF,0XFF,0XFF,0XFF,0X00,0X00,0X00,0X00,0X58,0X3B,0XFF,0X7F,0XFF,0X67,0XFF,0XFF,
0XFF,0XFF,0XFE,0X00,0X07,0XFF,0XFF,0XFF,0X7F,0XFF,0XFF,0XFF,0XFF,0X00,0X00,0X00,
0X00,0X18,0X3F,0XFF,0X7F,0XFF,0X07,0XFF,0XFF,0XFF,0XDF,0XFE,0X00,0X0F,0XFF,0X7F,
0XFF,0XBF,0XFF,0XFF,0XFF,0XFF,0X00,0X00,0X00,0X00,0X00,0X07,0XFF,0XFF,0XFF,0X03,
0XFF,0XFF,0XFF,0XFC,0X00,0X00,0X0F,0XFF,0XFF,0XFF,0X3F,0XFF,0XFF,0XFF,0XFF,0X00,
0X00,0X00,0X00,0X80,0X1F,0XFF,0XFF,0XFF,0X41,0XFF,0XFF,0XFF,0XE0,0X00,0X00,0X0F,
0XFF,0XFF,0XFF,0X3F,0XFF,0XFF,0XFF,0XFF,0X00,0X00,0X00,0X00,0X80,0X1F,0XFF,0XFF,
0XFF,0X41,0XFF,0XFF,0XFF,0XE0,0X00,0X00,0X0F,0XFE,0XFF,0XFF,0XBF,0XFF,0XFF,0XFF,
0XFF,0X00,0X00,0X00,0X3D,0X80,0X0F,0XFF,0XFF,0XFF,0X40,0XFF,0XFF,0XFF,0XE0,0X00,
0X00,0X0F,0XFF,0XFF,0XFF,0XBF,0XFF,0XFF,0XFF,0XFF,0X00,0X00,0X00,0X3C,0X80,0X0F,
0XFF,0XFF,0XFF,0X40,0XFF,0XFF,0XFF,0XE0,0X00,0X00,0X1F,0XFF,0XFF,0XFF,0X9F,0X3F,
0XFF,0XFF,0XFF,0X00,0X00,0X00,0X40,0X30,0X1F,0XFF,0XFF,0XFF,0X60,0X7F,0XFF,0XFF,
0XF0,0X00,0X00,0X1F,0XFF,0XFF,0XFF,0X90,0X3F,0XFF,0XFF,0XFF,0X00,0X00,0X00,0XE3,
0XF0,0X1F,0XFF,0XFF,0XFF,0X60,0X3F,0XFF,0XFF,0XF0,0X00,0X00,0X1F,0XFF,0XFF,0XFF,
0X81,0XFF,0XFF,0XFF,0XFF,0X00,0X00,0X01,0XC1,0XE1,0XFF,0XFF,0XFF,0XFF,0X60,0X1F,
0XFF,0XFF,0XF0,0X00,0X00,0X3F,0XF7,0XFF,0XFF,0X8F,0XFF,0XFF,0XFF,0XFF,0X00,0X00,
0X00,0X03,0XFF,0XFF,0XFE,0XFF,0XFF,0XE0,0X0F,0XFF,0XFF,0XF8,0X00,0X00,0X3F,0XFF,
0XFF,0XFF,0XCF,0XFF,0XFF,0XFF,0XFF,0X00,0X00,0X01,0XFF,0XFF,0XDF,0XFE,0XFF,0XFF,
0XF0,0X07,0XFF,0XFF,0XF8,0X00,0X00,0X3F,0XEF,0XFF,0XFF,0XCF,0XFF,0XFF,0XFF,0XFF,
0X00,0X00,0X7F,0XFF,0XFF,0X1F,0XFF,0XFF,0XFF,0XF0,0X03,0XFF,0XFF,0XF8,0X00,0X00,
0X3F,0XDF,0XFF,0XFF,0XC7,0XFF,0XFF,0XFF,0XFF,0X00,0X0F,0XFF,0XFF,0XE0,0X3F,0XFF,
0XFF,0XFF,0XF0,0X01,0XFF,0XFF,0XF8,0X00,0X00,0X3F,0XFF,0XFF,0XFF,0XC7,0XBF,0XFF,
0XFF,0XFF,0X0F,0XFF,0XFF,0XF8,0X00,0X3F,0XC1,0XFF,0XFF,0XF8,0X00,0XFF,0XFF,0XFC,
0X00,0X00,0X3F,0XFF,0XFF,0XFF,0XC4,0X3F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFE,0X08,0X00,
0X3E,0X01,0XFF,0XFF,0XF8,0X00,0X7F,0XFF,0XFC,0X00,0X00,0X3F,0XFF,0XFF,0XFF,0XC0,
0X3F,0XFF,0XFF,0XFF,0XFF,0XFE,0X00,0X00,0X00,0X38,0X01,0XFF,0XFF,0XF8,0X00,0X3F,
0XFF,0XFC,0X00,0X00,0X3F,0XFF,0XFF,0XFF,0XC0,0X3F,0XFF,0XFF,0XFF,0XFF,0XE6,0X00,
0X00,0X00,0X20,0X01,0XFF,0XFF,0XFC,0X00,0X0F,0XFF,0XFE,0X02,0X00,0X3F,0XFF,0XFF,
0XFF,0XC0,0X3F,0XFF,0XFF,0XFF,0XF0,0X06,0X00,0X00,0X00,0X00,0X0F,0XFF,0XFF,0XFC,
0X00,0X07,0XFF,0XFE,0X02,0X00,0X7D,0XFF,0XFF,0XFF,0XC0,0X3F,0XFF,0XFF,0XFF,0X00,
0X06,0X00,0X00,0X00,0X20,0X1F,0XFF,0XFF,0X7C,0X00,0X07,0XFF,0XFF,0X00,0X00,0X7B,
0XFF,0XFF,0XFF,0XC0,0X3F,0XFF,0XFF,0XFF,0X00,0X06,0X00,0X00,0X00,0X40,0X1B,0XFF,
0XFF,0X7C,0X00,0X03,0XFF,0XFF,0X04,0X00,0X77,0XFF,0XFF,0XFF,0XC0,0X3F,0XFF,0XFF,
0XFF,0X00,0X06,0X00,0X00,0X00,0XCC,0X3B,0XFF,0XFF,0X7E,0X00,0XC3,0XFF,0XFF,0X04,
0X00,0X7F,0XFF,0XFF,0XFF,0XC0,0X3F,0XFF,0XFF,0XFF,0X00,0X06,0X00,0X00,0X00,0X8C,
0X3F,0XFF,0XFF,0XFE,0X03,0XE1,0XFF,0XFF,0X04,0X00,0X6F,0XFF,0XFF,0XFF,0XC0,0X1F,
0XFF,0XFF,0XFF,0X3C,0X06,0X00,0X00,0X01,0X8C,0XFF,0XFF,0XFF,0XFE,0XFF,0XBD,0XFF,
0XFF,0X8C,0X00,0X7F,0XFF,0XFF,0XFF,0XC0,0X3F,0XFF,0XFF,0XFF,0XF8,0X06,0X00,0X00,
0X01,0X0F,0XF7,0XFF,0XFF,0XFF,0XFF,0XBF,0XFF,0XFF,0X8C,0X00,0X7F,0XFF,0XFF,0XFF,
0XC0,0X1F,0XFF,0XFF,0XFF,0XFE,0X66,0X00,0X00,0X01,0X1F,0XF7,0XFF,0XFE,0XBF,0XFF,
0XFF,0XFF,0XFF,0XDC,0X00,0X7F,0XFF,0XFF,0XFF,0XC0,0X1F,0XFF,0XFF,0XFF,0X00,0X06,
0X00,0X00,0X00,0X1F,0XFF,0XFF,0XFE,0XFF,0X7F,0XFE,0XFF,0XFF,0XD8,0X00,0XFF,0XFF,
0XFF,0XFF,0XC0,0X1F,0XFF,0XFF,0XFF,0X00,0X06,0X00,0X00,0X00,0X1F,0XEF,0XFF,0XFE,
0XFF,0XFF,0XFE,0XFF,0XFF,0XF8,0X00,0XFF,0XFF,0XFF,0XFF,0XC0,0X0F,0XFF,0XFF,0XFF,
0X00,0X06,0X00,0X00,0X00,0X1F,0XEF,0XFF,0XFE,0XDF,0XFF,0X7E,0XFF,0XFF,0XF8,0X00,
0XFF,0XFF,0XFF,0XFF,0X40,0X0F,0XFF,0XFF,0XFF,0X00,0X06,0X00,0X00,0X00,0X1F,0XFF,
0XFF,0XFE,0XFF,0XBF,0X7E,0X7F,0XFF,0XE8,0X01,0XFF,0XFF,0XFF,0XFF,0X40,0X0F,0XFF,
0XFF,0XFF,0X00,0X06,0X00,0X00,0X00,0X1F,0XFF,0XFF,0XFE,0XFF,0XFF,0X7E,0X7F,0XFF,
0XF8,0X01,0XFF,0XFF,0XFF,0XFF,0X40,0X1F,0XFF,0XFF,0XFF,0X00,0X06,0X00,0X00,0X00,
0X5F,0XDF,0XFF,0XFE,0XFF,0XDF,0XFF,0XFF,0XFF,0XF8,0X01,0XFF,0X0F,0XFF,0XFF,0X00,
0X0F,0XFF,0XFF,0XFF,0X00,0X06,0X00,0X00,0X10,0X5F,0XFF,0XFF,0XFE,0XEF,0XFF,0XFF,
0XFF,0XFF,0XF0,0X01,0XF0,0X01,0XFF,0XFF,0X00,0X0F,0XFF,0XFF,0XFF,0X00,0X06,0X00,
0X00,0X11,0XFF,0XBF,0XFF,0XFE,0XFF,0XFF,0XFF,0XBF,0XFF,0XF8,0X01,0XC0,0X00,0X3F,
0XFF,0X00,0X1F,0XFF,0XFF,0XFF,0X00,0X06,0X00,0X00,0X1F,0XFF,0XFF,0XFF,0XFF,0XF7,
0XEF,0XFF,0XBF,0XFF,0XF8,0X01,0X80,0X00,0X0F,0XFF,0X00,0X0F,0XFF,0XFF,0XFF,0X00,
0X06,0X00,0X01,0XF0,0X7F,0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XF8,0X01,0X00,
0X00,0X07,0XFF,0X00,0X0F,0XFF,0XFF,0XFF,0X00,0X06,0X1E,0X1F,0X81,0XFF,0XFF,0XFF,
0XFF,0XFB,0XF6,0XFD,0XFF,0XFF,0XFC,0X00,0X01,0XC0,0X03,0XFF,0X80,0X0F,0XFF,0XFF,
0XFF,0X00,0X07,0XE1,0XFF,0XFF,0XBF,0XFF,0XFF,0XFF,0XFF,0XFE,0XFD,0XFF,0XFF,0XFC,
0X00,0X07,0XE0,0X00,0XFF,0X80,0X07,0XFF,0XFF,0XFF,0X00,0X06,0X1F,0XFF,0XFF,0XBE,
0XFF,0XFF,0XFF,0XFF,0XFE,0XFD,0XDF,0XFF,0XFE,0X00,0X0F,0XF0,0X00,0X7F,0X80,0X07,
0XFF,0XFF,0XFF,0X0E,0X06,0X7F,0XFF,0XFF,0XBF,0XFF,0XFF,0XFF,0XFD,0XFB,0XFD,0XDF,
0XFF,0XFE,0X00,0X0F,0XE0,0X00,0X3F,0X80,0X07,0XFF,0XFF,0XFF,0XF8,0X07,0XFF,0XFF,
0XFF,0XBD,0XFF,0XFF,0XFD,0XFF,0XFF,0XFF,0XDF,0XFF,0XFF,0X00,0X0F,0XE0,0X00,0X1F,
0X80,0X03,0XFF,0XFF,0XFF,0XC0,0X7F,0XFF,0XFF,0XFF,0XBF,0XFF,0XFF,0XFD,0XFE,0XFD,
0XFF,0XFF,0XFF,0XFF,0X00,0X0F,0XE0,0X00,0X0F,0X80,0X03,0XFF,0XFF,0XFF,0X0F,0XFF,
0XFF,0XFF,0XFF,0XFB,0XFF,0XFF,0XFD,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X00,0X3F,0XF0,
0X00,0X07,0X80,0X01,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFB,0XFF,0XFF,0XFD,
0XFF,0XFE,0XFF,0XEF,0XFF,0XFF,0X80,0X3F,0XF8,0X00,0X03,0X80,0X01,0XFF,0XFF,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0X7F,0XFF,0XEF,0XFF,0XFF,0X80,
0X3F,0XFC,0X18,0X01,0X80,0X00,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XF7,0XFF,
0XFF,0XFF,0XFF,0XFF,0X7B,0XFF,0XFF,0XFF,0XC0,0X3F,0XFF,0XFC,0X00,0X80,0X00,0XFF,
0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XEF,0XFF,0XFF,0XFF,0XFF,0XBF,0XFB,0XFF,0XFF,
0XFF,0XC0,0X7F,0XFF,0XFE,0X00,0X00,0X00,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XFC,
0X6F,0XFF,0XFF,0XFF,0XFF,0XFF,0XBB,0XFF,0XFF,0XFF,0XE3,0XFF,0XFF,0XFE,0X00,0X00,
0X00,0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFF,0XF0,0X7F,0XFF,0XFF,0XFF,0XFF,0XDF,0XFB,
0XFF,0XFF,0XFF,0XE3,0XFF,0XFF,0XFF,0X00,0X00,0X00,0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,
0XFF,0X00,0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,0XFB,0XFF,0XFF,0XFF,0XF3,0X7F,0XFF,0XFF,
0X00,0X00,0X00,0X7F,0XFF,0XFF,0XFF,0XFF,0XFF,0XF8,0X00,0XDF,0XFF,0XFF,0XFF,0XFF,
0XEF,0XDB,0XFF,0XFF,0XFF,0XF3,0X7F,0XFF,0XFF,0X80,0X00,0X00,0X5F,0XFF,0XFF,0XFF,
0XFF,0XFF,0XC0,0X0F,0XFF,0XFF,0XFF,0XFB,0XFF,0XFF,0XEF,0XF7,0XFF,0XFF,0XF3,0XFF,
0XFF,0XFF,0XF0,0X00,0X00,0X3F,0XFF,0XFF}

lut_full_update = {
    0x66,
    0x66,
    0x44,
    0x66,
    0xAA,
    0x11,
    0x80,
    0x08,
    0x11,
    0x18,
    0x81,
    0x18,
    0x11,
    0x88,
    0x11,
    0x88,
    0x11,
    0x88,
    0x00,
    0x00,
    0xFF,
    0xFF,
    0xFF,
    0xFF,
    0x5F,
    0xAF,
    0xFF,
    0xFF,
    0x2F,
    0x00
}
lut_partial_update = {
    0x10
    ,0x18
    ,0x18
    ,0x28
    ,0x18
    ,0x18
    ,0x18
    ,0x18
    ,0x08
    ,0x00
    ,0x00
    ,0x00
    ,0x00
    ,0x00
    ,0x00
    ,0x00
    ,0x00
    ,0x00
    ,0x00
    ,0x00
    ,0x13
    ,0x11
    ,0x22
    ,0x63
    ,0x11
    ,0x00
    ,0x00
    ,0x00
    ,0x00
    ,0x00
}

-- Display resolution
local EPD_WIDTH       = 200
local EPD_HEIGHT      = 200

-- EPD1IN54 commands
local DRIVER_OUTPUT_CONTROL                       = 0x01
local BOOSTER_SOFT_START_CONTROL                  = 0x0C
local GATE_SCAN_START_POSITION                    = 0x0F
local DEEP_SLEEP_MODE                             = 0x10
local DATA_ENTRY_MODE_SETTING                     = 0x11
local SW_RESET                                    = 0x12
local TEMPERATURE_SENSOR_CONTROL                  = 0x1A
local MASTER_ACTIVATION                           = 0x20
local DISPLAY_UPDATE_CONTROL_1                    = 0x21
local DISPLAY_UPDATE_CONTROL_2                    = 0x22
local WRITE_RAM                                   = 0x24
local WRITE_VCOM_REGISTER                         = 0x2C
local WRITE_LUT_REGISTER                          = 0x32
local SET_DUMMY_LINE_PERIOD                       = 0x3A
local SET_GATE_TIME                               = 0x3B
local BORDER_WAVEFORM_CONTROL                     = 0x3C
local SET_RAM_X_ADDRESS_START_END_POSITION        = 0x44
local SET_RAM_Y_ADDRESS_START_END_POSITION        = 0x45
local SET_RAM_X_ADDRESS_COUNTER                   = 0x4E
local SET_RAM_Y_ADDRESS_COUNTER                   = 0x4F
local TERMINATE_FRAME_READ_WRITE                  = 0xFF

uart.close(2)
--打开SPI引脚的供电
pmd.ldoset(6,pmd.LDO_VMMC)
--[[
功能：配置SPI

参数：
id：SPI的ID，spi.SPI_1表示SPI1，Air201、Air202、Air800只有SPI1，固定传spi.SPI_1即可
cpha：spi_clk idle的状态，仅支持0和1，0表示低电平，1表示高电平
cpol：第几个clk的跳变沿传输数据，仅支持0和1，0表示第1个，1表示第2个
dataBits：数据位，仅支持8
clock：spi时钟频率，支持110K到13M（即110000到13000000）之间的整数（包含110000和13000000）
duplex：是否全双工，仅支持0和1，0表示半双工（仅支持输出），1表示全双工。此参数可选，默认半双工

返回值：number类型，1表示成功，0表示失败
]]
log.info("spi.setup",spi.setup(spi.SPI_1,0,0,8,2000000,0,0))

local function wait()
    while(getBusy() == 1)  -- 0: idle, 1: busy
    do
        log.info("epd1in45.wait",getBusy())
        rtos.sleep(100)
    end
end

local cmd = false
setDC(1)
local function sendCommand(data)
    --log.info("epd1in45.sendCommand",data)
    setDC(0)
    spi.send(spi.SPI_1,string.char(data))
end

local function sendData(data)
    --log.info("epd1in45.sendData",data)
    setDC(1)
    spi.send(spi.SPI_1,string.char(data))
end

local function reset()
    log.info("epd1in45.reset","")
    setRST(0)
    rtos.sleep(200)
    setRST(1)
    rtos.sleep(200)
end

local function deepSleep()
    log.info("epd1in45.deepSleep","")
    sendCommand(0x10)
    wait()
end

local function set_lut(lut)
    log.info("epd1in45.set_lut","")
    sendCommand(WRITE_LUT_REGISTER)
    for i= 1, #lut do
        sendData(lut[i])
    end
end

function init(lut)
    log.info("epd1in45.init","")
    if lut == nil then
        lut = lut_full_update
    end
    reset()
    sendCommand(DRIVER_OUTPUT_CONTROL)
    sendData(bit.band(EPD_HEIGHT-1,0xff))
    sendData(bit.band(bit.rshift(EPD_HEIGHT-1,8),0xff))
    sendData(0x00)
    sendCommand(BOOSTER_SOFT_START_CONTROL)
    sendData(0xD7)
    sendData(0xD6)
    sendData(0x9D)
    sendCommand(WRITE_VCOM_REGISTER)
    sendData(0xA8)
    sendCommand(SET_DUMMY_LINE_PERIOD)
    sendData(0x1A)
    sendCommand(SET_GATE_TIME)
    sendData(0x08)
    sendCommand(DATA_ENTRY_MODE_SETTING)
    sendData(0x03)
    set_lut(lut)
    log.info("epd1in45.init","done")
end

local function set_memory_area(x_start, y_start, x_end, y_end)
    log.info("epd1in45.set_memory_area",x_start, y_start, x_end, y_end)
    sendCommand(SET_RAM_X_ADDRESS_START_END_POSITION)
    -- x point must be the multiple of 8 or the last 3 bits will be ignored
    sendData(bit.band(bit.rshift(x_start,3),0xff))
    sendData(bit.band(bit.rshift(x_end,3),0xff))
    sendCommand(SET_RAM_Y_ADDRESS_START_END_POSITION)
    sendData(bit.band(y_start,0xff))
    sendData(bit.band(bit.rshift(y_start,8),0xff))
    sendData(bit.band(y_end,0xff))
    sendData(bit.band(bit.rshift(y_end,8),0xff))
    log.info("epd1in45.set_memory_area","done")
end

local function set_memory_pointer(x,y)
    log.info("epd1in45.set_memory_pointer",x,y)
    sendCommand(SET_RAM_X_ADDRESS_COUNTER)
    -- x point must be the multiple of 8 or the last 3 bits will be ignored
    sendData(bit.band(bit.rshift(x,3),0xff))
    sendCommand(SET_RAM_Y_ADDRESS_COUNTER)
    sendData(bit.band(y,0xff))
    sendData(bit.band(bit.rshift(y,8),0xff))
    wait()
    log.info("epd1in45.set_memory_pointer","done")
end

function clear_frame_memory(color)
    log.info("epd1in45.clear_frame_memory",color)
    set_memory_area(0, 0, EPD_WIDTH - 1, EPD_HEIGHT - 1)
    set_memory_pointer(0, 0)
    sendCommand(WRITE_RAM)
    for i= 1, EPD_WIDTH / 8 * EPD_HEIGHT do
        sendData(color)
    end
    log.info("epd1in45.clear_frame_memory","done")
end

function display_frame()
    log.info("epd1in45.display_frame","start")
    sendCommand(DISPLAY_UPDATE_CONTROL_2)
    sendData(0xC7)
    sendCommand(MASTER_ACTIVATION)
    sendCommand(TERMINATE_FRAME_READ_WRITE)
    wait()
    log.info("epd1in45.display_frame","done")
end


function showPicture(pic)
    log.info("epd1in45.showPicture","")
    set_memory_area(0, 0, EPD_WIDTH - 1, EPD_HEIGHT - 1)
    set_memory_pointer(0, 0)
    sendCommand(WRITE_RAM)
    for i= 1, #pic do
        sendData(pic[i])
    end
    display_frame()
end

init(lut_full_update)

showPicture(pic)

deepSleep()








